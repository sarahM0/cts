{"version":3,"sources":["../../../../src/webgpu/api/validation/fences.spec.ts"],"names":["description","makeTestGroup","assert","ValidationTest","g","test","fn","t","fence","queue","createFence","expectValidationError","promise","onCompletion","shouldReject","signal","initialValue","anotherDevice","device","adapter","requestDevice","defaultQueue","expect","getCompletedValue","pushErrorScope","gpuValidationError","popErrorScope","GPUValidationError","fail","message"],"mappings":"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","sourcesContent":["export const description = `\nfences validation tests.\n\nTODO: per-test descriptions, make names more succinct\nTODO: fences are removed; replace still-relevant tests with equivalents for (multiple?) queues\nTODO: Add some more tests/cases (may replace some existing tests), e.g.:\n  For fence values 0 < x < y < z:\n  - initialValue=0, signal(0)\n  - initialValue=x, signal(x)\n  - initialValue=x, signal(y)\n  - initialValue=y, signal(x)\n  - initialValue=x, signal(y), signal(y)\n  - initialValue=x, signal(y), signal(z), wait(z)\n  - initialValue=x, signal(z), signal(y)\n  - initialValue=x, wait(x)\n  - initialValue=y, wait(x)\n  - initialValue=x, wait(y)\n  - initialValue=x, signal(y), wait(x)\n  - initialValue=x, signal(y), wait(y)\n  - etc.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { assert } from '../../../common/framework/util/util.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\n// TODO: Remove if https://github.com/gpuweb/gpuweb/issues/377 is decided\ng.test('wait_on_a_fence_without_signaling_the_value_is_invalid').fn(async t => {\n  const fence = t.queue.createFence();\n\n  t.expectValidationError(() => {\n    const promise = fence.onCompletion(2);\n    t.shouldReject('OperationError', promise);\n  });\n});\n\n// TODO: Remove if https://github.com/gpuweb/gpuweb/issues/377 is decided\ng.test('wait_on_a_fence_with_a_value_greater_than_signaled_value_is_invalid').fn(async t => {\n  const fence = t.queue.createFence();\n  t.queue.signal(fence, 2);\n\n  t.expectValidationError(() => {\n    const promise = fence.onCompletion(3);\n    t.shouldReject('OperationError', promise);\n  });\n});\n\ng.test('signal_a_value_lower_than_signaled_value_is_invalid').fn(async t => {\n  const fence = t.queue.createFence({ initialValue: 1 });\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 0);\n  });\n});\n\ng.test('signal_a_value_equal_to_signaled_value_is_invalid').fn(async t => {\n  const fence = t.queue.createFence({ initialValue: 1 });\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 1);\n  });\n});\n\ng.test('increasing_fence_value_by_more_than_1_succeeds').fn(async t => {\n  const fence = t.queue.createFence();\n\n  t.queue.signal(fence, 2);\n  await fence.onCompletion(2);\n\n  t.queue.signal(fence, 6);\n  await fence.onCompletion(6);\n});\n\n// TODO: Move these two tests to device_mismatched. Probably merge into one test.\n// Parameterize over whether another device is used, to test the control case.\ng.test('signal_a_fence_on_a_different_device_than_it_was_created_on_is_invalid').fn(async t => {\n  const anotherDevice = await t.device.adapter.requestDevice();\n  assert(anotherDevice !== null);\n  const fence = anotherDevice.defaultQueue.createFence();\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 2);\n  });\n});\n\ng.test('signal_a_fence_on_a_different_device_does_not_update_fence_signaled_value').fn(async t => {\n  const anotherDevice = await t.device.adapter.requestDevice();\n  assert(anotherDevice !== null);\n  const fence = anotherDevice.defaultQueue.createFence({ initialValue: 1 });\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 2);\n  });\n\n  t.expect(fence.getCompletedValue() === 1);\n\n  anotherDevice.pushErrorScope('validation');\n\n  anotherDevice.defaultQueue.signal(fence, 2);\n  await fence.onCompletion(2);\n  t.expect(fence.getCompletedValue() === 2);\n\n  const gpuValidationError = await anotherDevice.popErrorScope();\n  if (gpuValidationError instanceof GPUValidationError) {\n    t.fail(`Captured validation error - ${gpuValidationError.message}`);\n  }\n});\n"],"file":"fences.spec.js"}
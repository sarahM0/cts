{"version":3,"sources":["../../../../src/webgpu/api/validation/createSampler.spec.ts"],"names":["description","poptions","params","makeTestGroup","ValidationTest","g","test","desc","combine","fn","t","expectValidationError","device","createSampler","lodMinClamp","lodMaxClamp","undefined","minFilter","magFilter","mipmapFilter","maxAnisotropy"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,6CAAjC;AACA,SAASC,aAAT,QAA8B,yCAA9B;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,mBAAP;AACGC,IADH,CACQ,yDADR;AAEGL,MAFH;AAGIA,MAAM;AACHM,OADH,CACWP,QAAQ,CAAC,aAAD,EAAgB,CAAC,CAAC,KAAF,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,EAAxB,EAA4B,IAA5B,CAAhB,CADnB;AAEGO,OAFH,CAEWP,QAAQ,CAAC,aAAD,EAAgB,CAAC,CAAC,KAAF,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,EAAxB,EAA4B,IAA5B,CAAhB,CAFnB,CAHJ;;AAOGQ,EAPH,CAOM,MAAMC,CAAN,IAAW;AACbA,EAAAA,CAAC,CAACC,qBAAF,CAAwB,MAAM;AAC5BD,IAAAA,CAAC,CAACE,MAAF,CAASC,aAAT,CAAuB;AACrBC,MAAAA,WAAW,EAAEJ,CAAC,CAACR,MAAF,CAASY,WADD;AAErBC,MAAAA,WAAW,EAAEL,CAAC,CAACR,MAAF,CAASa,WAFD,EAAvB;;AAID,GALD,EAKGL,CAAC,CAACR,MAAF,CAASY,WAAT,GAAuBJ,CAAC,CAACR,MAAF,CAASa,WAAhC,IAA+CL,CAAC,CAACR,MAAF,CAASY,WAAT,GAAuB,CAAtE,IAA2EJ,CAAC,CAACR,MAAF,CAASa,WAAT,GAAuB,CALrG;AAMD,CAdH;;AAgBAV,CAAC,CAACC,IAAF,CAAO,eAAP;AACGC,IADH,CACQ,gFADR;AAEGL,MAFH,CAEU;AACN,GAAGD,QAAQ,CAAC,eAAD,EAAkB,CAAC,CAAC,CAAF,EAAKe,SAAL,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,IAA3C,CAAlB,CADL;AAEN,EAAEC,SAAS,EAAE,SAAb,EAFM;AAGN,EAAEC,SAAS,EAAE,SAAb,EAHM;AAIN,EAAEC,YAAY,EAAE,SAAhB,EAJM,CAFV;;AAQGV,EARH,CAQM,MAAMC,CAAN,IAAW;AACb,QAAM;AACJU,IAAAA,aAAa,GAAG,CADZ;AAEJH,IAAAA,SAAS,GAAG,QAFR;AAGJC,IAAAA,SAAS,GAAG,QAHR;AAIJC,IAAAA,YAAY,GAAG,QAJX;AAKFT,EAAAA,CAAC,CAACR,MALN;;;;;;AAWAQ,EAAAA,CAAC,CAACC,qBAAF,CAAwB,MAAM;AAC5BD,IAAAA,CAAC,CAACE,MAAF,CAASC,aAAT,CAAuB;AACrBI,MAAAA,SADqB;AAErBC,MAAAA,SAFqB;AAGrBC,MAAAA,YAHqB;AAIrBC,MAAAA,aAJqB,EAAvB;;AAMD,GAPD,EAOGA,aAAa,GAAG,CAAhB,IAAsBA,aAAa,GAAG,CAAhB,IAAqB,EAAEH,SAAS,KAAK,QAAd,IAA0BC,SAAS,KAAK,QAAxC,IAAoDC,YAAY,KAAK,QAAvE,CAP9C;AAQD,CA5BH","sourcesContent":["export const description = `\ncreateSampler validation tests.\n`;\n\nimport { poptions, params } from '../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('lodMinAndMaxClamp')\n  .desc('test different combinations of min and max clamp values')\n  .params(\n    params()\n      .combine(poptions('lodMinClamp', [-4e-30, -1, 0, 0.5, 1, 10, 4e30]))\n      .combine(poptions('lodMaxClamp', [-4e-30, -1, 0, 0.5, 1, 10, 4e30]))\n  )\n  .fn(async t => {\n    t.expectValidationError(() => {\n      t.device.createSampler({\n        lodMinClamp: t.params.lodMinClamp,\n        lodMaxClamp: t.params.lodMaxClamp,\n      });\n    }, t.params.lodMinClamp > t.params.lodMaxClamp || t.params.lodMinClamp < 0 || t.params.lodMaxClamp < 0);\n  });\n\ng.test('maxAnisotropy')\n  .desc('test different maxAnisotropy values and combinations with min/mag/mipmapFilter')\n  .params([\n    ...poptions('maxAnisotropy', [-1, undefined, 0, 1, 2, 4, 7, 16, 32, 33, 1024]),\n    { minFilter: 'nearest' as const },\n    { magFilter: 'nearest' as const },\n    { mipmapFilter: 'nearest' as const },\n  ])\n  .fn(async t => {\n    const {\n      maxAnisotropy = 1,\n      minFilter = 'linear',\n      magFilter = 'linear',\n      mipmapFilter = 'linear',\n    } = t.params as {\n      maxAnisotropy?: number;\n      minFilter?: GPUFilterMode;\n      magFilter?: GPUFilterMode;\n      mipmapFilter?: GPUFilterMode;\n    };\n    t.expectValidationError(() => {\n      t.device.createSampler({\n        minFilter,\n        magFilter,\n        mipmapFilter,\n        maxAnisotropy,\n      });\n    }, maxAnisotropy < 1 || (maxAnisotropy > 1 && !(minFilter === 'linear' && magFilter === 'linear' && mipmapFilter === 'linear')));\n  });\n"],"file":"createSampler.spec.js"}
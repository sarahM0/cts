{"version":3,"sources":["../../../../../src/webgpu/api/validation/buffer/destroy.spec.ts"],"names":["description","params","pbool","makeTestGroup","GPUConst","ValidationTest","g","test","desc","combine","size","usage","BufferUsage","COPY_SRC","MAP_WRITE","COPY_DST","MAP_READ","fn","t","buf","device","createBuffer","destroy","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gDAA9B;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,IADH,CACQ,0FADR;AAEGP,MAFH;AAGIA,MAAM;AACHQ,OADH,CACWP,KAAK,CAAC,kBAAD,CADhB;AAEGO,OAFH,CAEW;AACP,EAAEC,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEP,QAAQ,CAACQ,WAAT,CAAqBC,QAAvC,EADO;AAEP,EAAEH,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEP,QAAQ,CAACQ,WAAT,CAAqBE,SAArB,GAAiCV,QAAQ,CAACQ,WAAT,CAAqBC,QAAxE,EAFO;AAGP,EAAEH,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEP,QAAQ,CAACQ,WAAT,CAAqBG,QAArB,GAAgCX,QAAQ,CAACQ,WAAT,CAAqBI,QAAvE,EAHO,CAFX,CAHJ;;;AAWGC,EAXH,CAWM,MAAMC,CAAN,IAAW;AACb,QAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsBH,CAAC,CAACjB,MAAxB,CAAZ;;AAEAkB,EAAAA,GAAG,CAACG,OAAJ;AACAH,EAAAA,GAAG,CAACG,OAAJ;AACD,CAhBH;;AAkBAhB,CAAC,CAACC,IAAF,CAAO,cAAP;AACGC,IADH;AAEK;AACL,gCAHA;;AAKGe,aALH","sourcesContent":["export const description = `\nDestroying a buffer more than once is allowed.\n`;\n\nimport { params, pbool } from '../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../constants.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('twice')\n  .desc('Tests various mapping-related descripton options that could affect how state is tracked.')\n  .params(\n    params()\n      .combine(pbool('mappedAtCreation'))\n      .combine([\n        { size: 4, usage: GPUConst.BufferUsage.COPY_SRC },\n        { size: 4, usage: GPUConst.BufferUsage.MAP_WRITE | GPUConst.BufferUsage.COPY_SRC },\n        { size: 4, usage: GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.MAP_READ },\n      ])\n  )\n  .fn(async t => {\n    const buf = t.device.createBuffer(t.params);\n\n    buf.destroy();\n    buf.destroy();\n  });\n\ng.test('while_mapped')\n  .desc(\n    `Test destroying a {mappable, unmappable mapAtCreation, mappable mapAtCreation} buffer while it\nis {mapped, mapped at creation}`\n  )\n  .unimplemented();\n"],"file":"destroy.spec.js"}
{"version":3,"sources":["../../../../../src/webgpu/api/validation/initialization/requestDevice.spec.ts"],"names":["description","Fixture","makeTestGroup","g","test","desc","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,OAAT,QAAwB,yCAAxB;AACA,SAASC,aAAT,QAA8B,4CAA9B;;AAEA,OAAO,MAAMC,CAAC,GAAGD,aAAa,CAACD,OAAD,CAAvB;;AAEPE,CAAC,CAACC,IAAF,CAAO,sBAAP;AACGC,IADH,CACQ,oEADR;AAEGC,aAFH;;AAIAH,CAAC,CAACC,IAAF,CAAO,gCAAP;AACGC,IADH;AAEK;AACL;AACA,8CAJA;;AAMGC,aANH;;AAQAH,CAAC,CAACC,IAAF,CAAO,QAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXA;;AAaGC,aAbH","sourcesContent":["export const description = `\nTest validation conditions for requestDevice.\n`;\n\nimport { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\n\nexport const g = makeTestGroup(Fixture);\n\ng.test('features,nonexistent')\n  .desc('requestDevice with a made-up feature name. Should resolve to null.')\n  .unimplemented();\n\ng.test('features,known_but_unavailable')\n  .desc(\n    `requestDevice with a valid feature that's unavailable on the adapter. Should resolve to null.\n(Skipped if such a feature can't be found. But most browsers should support both BC and ETC\nwhile most hardware should only support one.)`\n  )\n  .unimplemented();\n\ng.test('limits')\n  .desc(\n    `For each limit, request with various values. Some should resolve to null. (TODO: which?)\n\n- value = {\n    - less than default\n    - default\n    - default + 1\n    - best available\n    - better than what's available\n    - }\n  `\n  )\n  .unimplemented();\n"],"file":"requestDevice.spec.js"}
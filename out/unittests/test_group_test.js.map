{"version":3,"sources":["../../src/unittests/test_group_test.ts"],"names":["Logger","TestQuerySingleCase","objectEquals","UnitTest","TestGroupTest","run","g","logger","t","iterate","rc","query","id","test","params","rec","record","toString","results","expectCases","cases","gcases","push","Array","from","c","expect"],"mappings":";AAAA;AACA,GADA,SAASA,MAAT,QAAmC,uCAAnC,CACA,SAASC,mBAAT,QAAoC,oCAApC;AAEA,SAASC,YAAT,QAA6B,kCAA7B;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,aAAN,SAA4BD,QAA5B,CAAqC;AAC1C,QAAME,GAAN,CAAUC,CAAV,EAAqD;AACnD,UAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAW,IAAX,CAAf;AACA,SAAK,MAAMQ,CAAX,IAAgBF,CAAC,CAACG,OAAF,EAAhB,EAA6B;AAC3B,WAAK,MAAMC,EAAX,IAAiBF,CAAC,CAACC,OAAF,EAAjB,EAA8B;AAC5B,cAAME,KAAK,GAAG,IAAIV,mBAAJ,CAAwB,IAAxB,EAA8B,CAAC,IAAD,CAA9B,EAAsCS,EAAE,CAACE,EAAH,CAAMC,IAA5C,EAAkDH,EAAE,CAACE,EAAH,CAAME,MAAxD,CAAd;AACA,cAAM,CAACC,GAAD,IAAQR,MAAM,CAACS,MAAP,CAAcL,KAAK,CAACM,QAAN,EAAd,CAAd;AACA,cAAMP,EAAE,CAACL,GAAH,CAAOU,GAAP,CAAN;AACD;AACF;AACD,WAAOR,MAAM,CAACW,OAAd;AACD;;AAEDC,EAAAA,WAAW,CAACb,CAAD,EAAuBc,KAAvB,EAAkD;AAC3D,UAAMC,MAAM,GAAG,EAAf;AACA,SAAK,MAAMb,CAAX,IAAgBF,CAAC,CAACG,OAAF,EAAhB,EAA6B;AAC3BY,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAGC,KAAK,CAACC,IAAN,CAAWhB,CAAC,CAACC,OAAF,EAAX,EAAwBgB,CAAC,IAAIA,CAAC,CAACb,EAA/B,CAAf;AACD;AACD,SAAKc,MAAL,CAAYxB,YAAY,CAACmB,MAAD,EAASD,KAAT,CAAxB;AACD,GAnByC","sourcesContent":["import { Logger, LogResults } from '../common/framework/logging/logger.js';\nimport { TestQuerySingleCase } from '../common/framework/query/query.js';\nimport { IterableTestGroup, TestCaseID } from '../common/framework/test_group.js';\nimport { objectEquals } from '../common/framework/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport class TestGroupTest extends UnitTest {\n  async run(g: IterableTestGroup): Promise<LogResults> {\n    const logger = new Logger(true);\n    for (const t of g.iterate()) {\n      for (const rc of t.iterate()) {\n        const query = new TestQuerySingleCase('xx', ['yy'], rc.id.test, rc.id.params);\n        const [rec] = logger.record(query.toString());\n        await rc.run(rec);\n      }\n    }\n    return logger.results;\n  }\n\n  expectCases(g: IterableTestGroup, cases: TestCaseID[]): void {\n    const gcases = [];\n    for (const t of g.iterate()) {\n      gcases.push(...Array.from(t.iterate(), c => c.id));\n    }\n    this.expect(objectEquals(gcases, cases));\n  }\n}\n"],"file":"test_group_test.js"}
{"version":3,"sources":["../../../src/common/runtime/wpt.ts"],"names":["DefaultTestFileLoader","Logger","parseQuery","assert","optionEnabled","TestWorker","setup","explicit_done","loader","qs","URLSearchParams","window","location","search","getAll","length","testcases","loadCases","worker","undefined","log","testcase","name","query","toString","wpt_fn","t","rec","res","record","run","step","status","logs","map","s","toJSON","join","promise_test","done"],"mappings":";AAAA;AACA,G,CADA;AAEA,SAASA,qBAAT,QAAsC,6BAAtC,CACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA;;;;;;;;;AASAC,KAAK,CAAC;AACJ;AACA;AACAC,EAAAA,aAAa,EAAE,IAHX,EAAD,CAAL;;;AAMA,CAAC,YAAY;AACX,QAAMC,MAAM,GAAG,IAAIR,qBAAJ,EAAf;AACA,QAAMS,EAAE,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,MAA5C,CAAmD,GAAnD,CAAX;AACAX,EAAAA,MAAM,CAACM,EAAE,CAACM,MAAH,KAAc,CAAf,EAAkB,0CAAlB,CAAN;AACA,QAAMC,SAAS,GAAG,MAAMR,MAAM,CAACS,SAAP,CAAiBf,UAAU,CAACO,EAAE,CAAC,CAAD,CAAH,CAA3B,CAAxB;;AAEA,QAAMS,MAAM,GAAGd,aAAa,CAAC,QAAD,CAAb,GAA0B,IAAIC,UAAJ,CAAe,KAAf,CAA1B,GAAkDc,SAAjE;;AAEA,QAAMC,GAAG,GAAG,IAAInB,MAAJ,CAAW,KAAX,CAAZ;;AAEA,OAAK,MAAMoB,QAAX,IAAuBL,SAAvB,EAAkC;AAChC,UAAMM,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAeC,QAAf,EAAb;AACA,UAAMC,MAAM,GAAG,MAAOC,CAAP,IAA4B;AACzC,YAAM,CAACC,GAAD,EAAMC,GAAN,IAAaR,GAAG,CAACS,MAAJ,CAAWP,IAAX,CAAnB;AACA,UAAIJ,MAAJ,EAAY;AACV,cAAMA,MAAM,CAACY,GAAP,CAAWH,GAAX,EAAgBL,IAAhB,CAAN;AACD,OAFD,MAEO;AACL,cAAMD,QAAQ,CAACS,GAAT,CAAaH,GAAb,CAAN;AACD;;AAEDD,MAAAA,CAAC,CAACK,IAAF,CAAO,MAAM;AACX;AACA,YAAIH,GAAG,CAACI,MAAJ,KAAe,MAAnB,EAA2B;AACzB,gBAAM,CAACJ,GAAG,CAACK,IAAJ,IAAY,EAAb,EAAiBC,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,MAAF,EAA1B,EAAsCC,IAAtC,CAA2C,MAA3C,CAAN;AACD;AACF,OALD;AAMD,KAdD;;AAgBAC,IAAAA,YAAY,CAACb,MAAD,EAASH,IAAT,CAAZ;AACD;;AAEDiB,EAAAA,IAAI;AACL,CAhCD","sourcesContent":["// Implements the wpt-embedded test runner (see also: wpt/cts.html).\n\nimport { DefaultTestFileLoader } from '../framework/file_loader.js';\nimport { Logger } from '../framework/logging/logger.js';\nimport { parseQuery } from '../framework/query/parseQuery.js';\nimport { assert } from '../framework/util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\n// testharness.js API (https://web-platform-tests.org/writing-tests/testharness-api.html)\ndeclare interface WptTestObject {\n  step(f: () => void): void;\n  done(): void;\n}\ndeclare function setup(properties: { explicit_done?: boolean }): void;\ndeclare function promise_test(f: (t: WptTestObject) => Promise<void>, name: string): void;\ndeclare function done(): void;\n\nsetup({\n  // It's convenient for us to asynchronously add tests to the page. Prevent done() from being\n  // called implicitly when the page is finished loading.\n  explicit_done: true,\n});\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const testcases = await loader.loadCases(parseQuery(qs[0]));\n\n  const worker = optionEnabled('worker') ? new TestWorker(false) : undefined;\n\n  const log = new Logger(false);\n\n  for (const testcase of testcases) {\n    const name = testcase.query.toString();\n    const wpt_fn = async (t: WptTestObject) => {\n      const [rec, res] = log.record(name);\n      if (worker) {\n        await worker.run(rec, name);\n      } else {\n        await testcase.run(rec);\n      }\n\n      t.step(() => {\n        // Unfortunately, it seems not possible to surface any logs for warn/skip.\n        if (res.status === 'fail') {\n          throw (res.logs || []).map(s => s.toJSON()).join('\\n\\n');\n        }\n      });\n    };\n\n    promise_test(wpt_fn, name);\n  }\n\n  done();\n})();\n"],"file":"wpt.js"}
{"version":3,"sources":["../../../../src/common/framework/logging/log_message.ts"],"names":["extractImportantStackTrace","LogMessageWithStack","Error","stackHidden","timesSeen","constructor","name","ex","message","stack","setStackHidden","incrementTimesSeen","toJSON","m"],"mappings":";AAAA;AACA,GADA,SAASA,0BAAT,QAA2C,kBAA3C,CAEA,OAAO,MAAMC,mBAAN,SAAkCC,KAAlC,CAAwC;AACrCC,EAAAA,WAAR,GAA+B,KAA/B;AACQC,EAAAA,SAAR,GAA4B,CAA5B;;AAEAC,EAAAA,WAAW,CAACC,IAAD,EAAeC,EAAf,EAA0B;AACnC,UAAMA,EAAE,CAACC,OAAT;;AAEA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKG,KAAL,GAAaF,EAAE,CAACE,KAAhB;AACD;;AAED;AACAC,EAAAA,cAAc,GAAG;AACf,SAAKP,WAAL,GAAmB,IAAnB;AACD;;AAED;AACAQ,EAAAA,kBAAkB,GAAG;AACnB,SAAKP,SAAL;AACD;;AAEDQ,EAAAA,MAAM,GAAW;AACf,QAAIC,CAAC,GAAG,KAAKP,IAAb;AACA,QAAI,KAAKE,OAAT,EAAkBK,CAAC,IAAI,OAAO,KAAKL,OAAjB;AAClB,QAAI,CAAC,KAAKL,WAAN,IAAqB,KAAKM,KAA9B,EAAqC;AACnCI,MAAAA,CAAC,IAAI,OAAOb,0BAA0B,CAAC,IAAD,CAAtC;AACD;AACD,QAAI,KAAKI,SAAL,GAAiB,CAArB,EAAwB;AACtBS,MAAAA,CAAC,IAAK,WAAU,KAAKT,SAAU,8BAA/B;AACD;AACD,WAAOS,CAAP;AACD,GA/B4C","sourcesContent":["import { extractImportantStackTrace } from '../util/stack.js';\n\nexport class LogMessageWithStack extends Error {\n  private stackHidden: boolean = false;\n  private timesSeen: number = 1;\n\n  constructor(name: string, ex: Error) {\n    super(ex.message);\n\n    this.name = name;\n    this.stack = ex.stack;\n  }\n\n  /** Set a flag so the stack is not printed in toJSON(). */\n  setStackHidden() {\n    this.stackHidden = true;\n  }\n\n  /** Increment the \"seen x times\" counter. */\n  incrementTimesSeen() {\n    this.timesSeen++;\n  }\n\n  toJSON(): string {\n    let m = this.name;\n    if (this.message) m += ': ' + this.message;\n    if (!this.stackHidden && this.stack) {\n      m += '\\n' + extractImportantStackTrace(this);\n    }\n    if (this.timesSeen > 1) {\n      m += `\\n(seen ${this.timesSeen} times with identical stack)`;\n    }\n    return m;\n  }\n}\n"],"file":"log_message.js"}